class MerchantMenuHandler : HDZFHandler {

    MerchantShopMenu menu;

    override void buttonClickCommand(HDZFButton btn, Name cmd) {
        let numCategories = menu.GetOpenedStore().Categories.Size();

        switch (cmd) {
            case 'buyItem':
                let itemBtn = MerchantItemBtn(btn);

                if (itemBtn && itemBtn.item && itemBtn.item.GetItem() != '') {
                    EventHandler.SendNetworkEvent(
                        String.Format(
                            "HDM_BuyStuff:%s",
                            itemBtn.item.GetItem()
                        ),
                        menu.SelCurrencyIndex
                    );
                }
                break;
            default:
                HDCore.Log('Merchant', LOGGING_WARN, "Unknown Command: "..cmd);
                break;
        }
    }

    override void toggleButtonChanged(HDZFToggleButton btn, Name cmd, bool on) {
        switch (cmd) {
            case 'toggleCategoryCollapse':
                HDCore.Log('Merchant', LOGGING_DEBUG, "Toggle Category Collapsed...");

                let toggleBtn = MerchantCategoryToggleButton(btn);
                if (toggleBtn) {
                    HDCore.Log('Merchant', LOGGING_DEBUG, "Toggle Button Exists");

                    let itemsFrame = toggleBtn.targetEl;
                    if (itemsFrame) {
                        HDCore.Log('Merchant', LOGGING_DEBUG, "Target Element Exists");

                        itemsFrame.setHidden(on);
                        
                        HDCore.Log('Merchant', LOGGING_DEBUG, "Target Element is now "..(itemsFrame.isHidden() ? "hidden" : "visible"));

                        menu.setScrollHeight();
                        menu.buildFocusableBtns();
                    }
                }
                break;
            default:
                HDCore.Log('Merchant', LOGGING_WARN, "Unknown Command: "..cmd);
                break;
        }
    }
}