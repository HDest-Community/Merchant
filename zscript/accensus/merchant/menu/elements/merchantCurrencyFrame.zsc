class MerchantCurrencyFrame : HDZFFrame {

    MerchantShopMenu menu;
    PlayerPawn plr;
    StoreCurrency currency;

    HDZFImage curImg;
    HDZFLabel curAmtLabel;

    static MerchantCurrencyFrame create (
        Vector2 pos,
        Vector2 size,
        MerchantShopMenu menu,
        PlayerPawn plr
    ) {
        let ret = new('MerchantCurrencyFrame');

        ret.setBox(pos, size);
        ret.alpha = 1;

        ret.menu = menu;
        ret.plr = plr;

        let height = ret.getHeight();
        let width = 35;

        if (menu.Handler.StoreCurrencies.size()) {
            ret.currency = menu.Handler.StoreCurrencies[menu.SelCurrencyIndex];

            ret.curImg = HDZFImage.create(
                (ret.getWidth() - width, 0),
                (width, height - MerchantShopMenu.Spacing),
                ret.currency.GetIcon(),
                HDZFElement.AlignType_Center
            );
            ret.curImg.pack(ret);
    
            ret.curAmtLabel = HDZFLabel.create(
                (ret.getWidth() - width, 0),
                (width, height),
                BaseStatusBar.FormatNumber(plr.CountInv(ret.currency.GetCurrencyClass()), 1, 4),
                SmallFont,
                HDZFElement.AlignType_BottomCenter,
                textColor: Font.CR_GOLD
            );
            ret.curAmtLabel.pack(ret);
        }

        return ret;
    }

    override void ticker() {
        super.ticker();

        if (menu.Handler.StoreCurrencies.size()) {
            let currency = menu.Handler.StoreCurrencies[menu.SelCurrencyIndex];
    
            curImg.setImage(currency.GetIcon());
            curAmtLabel.setText(BaseStatusBar.FormatNumber(plr.CountInv(currency.GetCurrencyClass()), 1, 4));
        }
    }

    override bool onNavEvent(HDZFNavEventType type, bool fromController) {
        switch (type) {
            case HDZFNavEventType_PageUp:
                menu.SelCurrencyIndex--;
                if (menu.SelCurrencyIndex < 0) menu.SelCurrencyIndex = menu.Handler.StoreCurrencies.Size() - 1;
                currency = menu.Handler.StoreCurrencies[menu.SelCurrencyIndex];
                return true;
            case HDZFNavEventType_PageDown:
                menu.SelCurrencyIndex++;
                if (menu.SelCurrencyIndex > menu.Handler.StoreCurrencies.Size() - 1) menu.SelCurrencyIndex = 0;
                currency = menu.Handler.StoreCurrencies[menu.SelCurrencyIndex];
                return true;
            default:
                HDCore.Log('Merchant', LOGGING_WARN, "Unknown NavEvent Type: "..type);

                return super.onNavEvent(type, fromController);
        }
    }
}
